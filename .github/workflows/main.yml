name: CI/CD Pipeline for Train Schedule Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.sunnyksa }}
          password: ${{ secrets.Desunnex.1 }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.sunnyksa }}/train-schedule:latest .
          docker push ${{ secrets.Desunnex.1 }}/train-schedule:latest

      - name: Run tests
        run: |
          docker run --rm ${{ secrets.sunnyksa }}/train-schedule:latest ./run_tests.sh

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.sunnyksa}}
          password: ${{ secrets.Desunnex.1 }}

      - name: Deploy to production
        run: FROM node:carbon

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 8080

CMD [ "npm", "start" ]
          # Add your deployment script here
          echo "Deploying the Docker image to production"
